CONTEXT: FILE: fastapi_server/api/toolkit/config_loader.py
BRANCH: 06-chapter__backend-frontend-retrospective

# toolkit/config_loader.py

import os
import sys
from dataclasses import dataclass

CONFIG_PATH = "local_gpu/config.env"


@dataclass
class Config:
    model_name: str
    offline_mode: bool


def log(message: str):
    print(f"[CONFIG] {message}")


def load_config() -> Config:
    if not os.path.isfile(CONFIG_PATH):
        log(f"❌ Missing config at {CONFIG_PATH}")
        sys.exit(1)

    config_data: dict[str, str] = {}
    with open(CONFIG_PATH) as f:
        for line in f:
            if "=" in line:
                k, v = line.strip().split("=", 1)
                config_data[k] = v.lower() if v.lower() in ["true", "false"] else v

    try:
        return Config(
            model_name=config_data["MODEL_NAME"],
            offline_mode=config_data["OFFLINE_MODE"] == "true",
        )
    except KeyError as e:
        log(f"❌ Missing required config variable: {e}")
        sys.exit(1)
